package problem2

import "fmt"

const (
	limit = 4000000
)

// Solve Even Fibonacci numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
func Solve() {
	fib := generate()
	var evenSum int64
	for _, v := range fib {
		if v%2 == 0 {
			evenSum += v
		}
	}
	fmt.Printf("Result: %d", evenSum)
}

func generate() []int64 {
	fib := []int64{1, 2}
	for {
		l := len(fib)
		a := fib[l-1]
		b := fib[l-2]
		r := a + b
		if r > limit {
			return fib
		}
		fib = append(fib, r)
	}
	return fib
}
